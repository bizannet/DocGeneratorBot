import logging
from aiogram import Router, F
from aiogram.types import Message
from aiogram.exceptions import (
    TelegramForbiddenError,
    TelegramRetryAfter,
    TelegramBadRequest
)
from config import config

logger = logging.getLogger('doc_bot.support')
router = Router(name="support_router")


@router.message(F.chat.id == config.SUPPORT_CHAT_ID)
async def handle_admin_support_reply(message: Message):
    if not message.text or ":" not in message.text:
        await message.reply(
            "‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç.\n\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –æ—Ç–≤–µ—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n"
            "<code>123456789: –í–∞—à –æ—Ç–≤–µ—Ç –∑–¥–µ—Å—å</code>",
            parse_mode="HTML"
        )
        return

    try:
        user_id_part, reply_text = message.text.split(":", 1)
        user_id = int(user_id_part.strip())
        text = reply_text.strip()

        if not text:
            raise ValueError("–¢–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞ –ø—É—Å—Ç")

        await message.bot.send_message(
            chat_id=user_id,
            text=f"üì¨ <b>–û—Ç–≤–µ—Ç –æ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏:</b>\n\n{text}",
            parse_mode="HTML"
        )

        logger.info(f"–û—Ç–≤–µ—Ç –æ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")
        await message.reply("‚úÖ –û—Ç–≤–µ—Ç —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!")

    except ValueError as e:
        logger.warning(f"–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç ID –∏–ª–∏ –ø—É—Å—Ç–æ–π —Ç–µ–∫—Å—Ç: {e}")
        await message.reply("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π ID –∏–ª–∏ –ø—É—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ–æ—Ä–º–∞—Ç: <code>ID: —Ç–µ–∫—Å—Ç</code>",
                            parse_mode="HTML")

    except TelegramForbiddenError:
        logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: –±–æ—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω")
        await message.reply("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞ –∏–ª–∏ —É–¥–∞–ª–∏–ª —á–∞—Ç.")

    except TelegramRetryAfter as e:
        logger.warning(f"–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ Telegram: –ø–æ–≤—Ç–æ—Ä —á–µ—Ä–µ–∑ {e.retry_after} —Å–µ–∫")
        await message.reply(f"‚è≥ Telegram –≤—Ä–µ–º–µ–Ω–Ω–æ –æ–≥—Ä–∞–Ω–∏—á–∏–ª –æ—Ç–ø—Ä–∞–≤–∫—É. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ —á–µ—Ä–µ–∑ {e.retry_after} —Å–µ–∫.")

    except TelegramBadRequest as e:
        logger.error(f"–û—à–∏–±–∫–∞ Telegram –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ: {e}")
        await message.reply(
            "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ. –í–æ–∑–º–æ–∂–Ω–æ, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –±–æ—Ç –Ω–µ –º–æ–∂–µ—Ç –ø–∏—Å–∞—Ç—å –ø–µ—Ä–≤—ã–º.")

    except Exception as e:
        logger.error(f"–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç–≤–µ—Ç–∞: {e}", exc_info=True)
        await message.reply("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É.")